name: Checks

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Instrumentation checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86]
        api-level: [24, 29]
    steps:
      - name: Checkout (recursive)
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Run instrumentation checks
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: ${{ matrix.arch }}
          script: ./gradlew connectedCheck --info
  test2:
    name: Instrumentation checks part 2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, arm64-v8a]
        api-level: [21, 35]
    steps:
      - name: Checkout (recursive)
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Run instrumentation checks
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: ${{ matrix.arch }}
          script: ./gradlew connectedCheck --info
  publish:
    name: Publish to snapshot repo if master branch
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Checkout (recursive)
        uses: actions/checkout@v4
        with:
          submodules: recursive
        if: env.WORKFLOW_CONCLUSION == 'success'
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
        if: env.WORKFLOW_CONCLUSION == 'success'
      - name: Publish
        run: ./gradlew publishSnapshotPublicationToSnapshotRepository -Psigning.gnupg.keyName="${{ secrets.GPG_SIGNING_SUBKEY_ID }}" -Psigning.password="${{ secrets.GPG_PASSPHRASE }}" -PossrhUsername="${{ secrets.SONATYPE_USER }}" -PossrhPassword="${{ secrets.SONATYPE_PASSWORD }}"
        if: env.WORKFLOW_CONCLUSION == 'success'
